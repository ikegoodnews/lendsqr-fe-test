import 'bootstrap/dist/css/bootstrap.css';
import '@/styles/globals.scss';
import '@/styles/index.scss';
import type {AppProps} from 'next/app';
import Head from 'next/head';
import {useEffect} from 'react';
import {Provider} from 'react-redux';
import {wrapper} from '@/_helpers/store';
import {PersistGate} from 'redux-persist/integration/react';
import {userActions} from '@/_actions';
import Lottie from 'react-lottie';

import screenLoader from '../../public/_assets/animations/screen_loader.json';

if (process.env.NODE_ENV !== 'development') {
   console.log = () => {};
}

const LoadingGif = {
   loop: true,
   autoplay: true,
   animationData: screenLoader,
   rendererSettings: {
      preserveAspectRatio: 'xMidYMid slice',
   },
};

function App({Component, ...rest}: AppProps) {
   const {store, props} = wrapper.useWrappedStore(rest);
   const {pageProps} = props;

   useEffect(() => {
      require('bootstrap/dist/js/bootstrap.js');
      // eslint-disable-next-line react-hooks/exhaustive-deps
   }, []);

   const beforeLift = () => {
      // store.dispatch(userActions.clearPrevState());
   };

   return (
      <>
         <Head>
            <title>LENDSQR FE TEST</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
            <link rel="preconnect" href="https://fonts.googleapis.com" />
            <link rel="preconnect" href="https://fonts.gstatic.com" />
            {/* <link href="https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet" /> */}
         </Head>

         <Provider store={store}>
            <PersistGate
               // beforeLift={beforeLift}
               persistor={store.__PERSISTOR}
               loading={
                  <div className="d-flex vh-100 vw-100 align-items-center justify-content-center bg-black">
                     <div className="text-white">
                        <Lottie options={LoadingGif} height={200} width={200} />
                     </div>
                  </div>
               }>
               <Component {...pageProps} />
            </PersistGate>
         </Provider>
      </>
   );
}

export default wrapper.withRedux(App);

function getInitialProps() {
   return {};
}

App.getInitialProps = getInitialProps;
